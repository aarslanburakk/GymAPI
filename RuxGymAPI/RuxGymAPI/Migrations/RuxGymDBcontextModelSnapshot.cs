// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RuxGymAPI.Context;

#nullable disable

namespace RuxGymAPI.Migrations
{
    [DbContext(typeof(RuxGymDBcontext))]
    partial class RuxGymDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RuxGymAPI.Models.PasswordCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CodeKey")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PasswordCodes");
                });

            modelBuilder.Entity("RuxGymAPI.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsOlimpia")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastConnectionDate")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("RuxGymAPI.Models.PlayerEnergy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("PlayerCurrentEnergy")
                        .HasColumnType("int");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PlayerLastEnergyDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PlayerUseEnergyDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PlayerEnergies");
                });

            modelBuilder.Entity("RuxGymAPI.Models.PlayerStat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<float>("ALlPower")
                        .HasColumnType("float");

                    b.Property<float>("ArmPower")
                        .HasColumnType("float");

                    b.Property<float>("BackPower")
                        .HasColumnType("float");

                    b.Property<float>("ChestPower")
                        .HasColumnType("float");

                    b.Property<int>("CreatinItem")
                        .HasColumnType("int");

                    b.Property<int>("EnergyItem")
                        .HasColumnType("int");

                    b.Property<float>("LegPower")
                        .HasColumnType("float");

                    b.Property<int>("PlayerCash")
                        .HasColumnType("int");

                    b.Property<int>("PlayerDiamond")
                        .HasColumnType("int");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("PlayerSpinCount")
                        .HasColumnType("int");

                    b.Property<int>("ProteinItem")
                        .HasColumnType("int");

                    b.Property<float>("SixpackPower")
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("ID");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerStats");
                });

            modelBuilder.Entity("RuxGymAPI.Models.SpinDateTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PlayerLastSpinDate")
                        .HasColumnType("longtext");

                    b.Property<string>("PlayerUseSpinDate")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SpinDateTimes");
                });

            modelBuilder.Entity("RuxGymAPI.Models.PlayerStat", b =>
                {
                    b.HasOne("RuxGymAPI.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });
#pragma warning restore 612, 618
        }
    }
}
