// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RuxGymAPI.Context;

#nullable disable

namespace RuxGymAPI.Migrations
{
    [DbContext(typeof(RuxGymDBcontext))]
    [Migration("20230523204848_mig_!")]
    partial class mig_
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RuxGymAPI.Models.OlimpiaWeek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OlimpiaWeeks");
                });

            modelBuilder.Entity("RuxGymAPI.Models.PasswordCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PasswordCodes");
                });

            modelBuilder.Entity("RuxGymAPI.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFacebookUser")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGuest")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<string>("LastConnectionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("RuxGymAPI.Models.PlayerEnergy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EndEnergyTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerCurrentEnergy")
                        .HasColumnType("int");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StartEnergyTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlayerEnergies");
                });

            modelBuilder.Entity("RuxGymAPI.Models.PlayerGymItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AbsItem")
                        .HasColumnType("int");

                    b.Property<int>("BenchPressItem")
                        .HasColumnType("int");

                    b.Property<int>("DeadLiftItem")
                        .HasColumnType("int");

                    b.Property<int>("DumbbellPressItem")
                        .HasColumnType("int");

                    b.Property<int>("SquatItem")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PlayerGymItems");
                });

            modelBuilder.Entity("RuxGymAPI.Models.PlayerPremium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EndPremiumDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isPremium")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PlayerPremia");
                });

            modelBuilder.Entity("RuxGymAPI.Models.PlayerStat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("ALlPower")
                        .HasColumnType("real");

                    b.Property<float>("ArmPower")
                        .HasColumnType("real");

                    b.Property<float>("BackPower")
                        .HasColumnType("real");

                    b.Property<float>("ChestPower")
                        .HasColumnType("real");

                    b.Property<int>("CreatinItem")
                        .HasColumnType("int");

                    b.Property<int>("EnergyItem")
                        .HasColumnType("int");

                    b.Property<bool>("IsOlimpia")
                        .HasColumnType("bit");

                    b.Property<float>("LegPower")
                        .HasColumnType("real");

                    b.Property<int>("OlimpiaWin")
                        .HasColumnType("int");

                    b.Property<int>("PlayerCash")
                        .HasColumnType("int");

                    b.Property<int>("PlayerDiamond")
                        .HasColumnType("int");

                    b.Property<int>("PlayerGoldTicket")
                        .HasColumnType("int");

                    b.Property<int>("PlayerSpinCount")
                        .HasColumnType("int");

                    b.Property<int>("ProteinItem")
                        .HasColumnType("int");

                    b.Property<float>("SixpackPower")
                        .HasColumnType("real");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("PlayerStats");
                });

            modelBuilder.Entity("RuxGymAPI.Models.SpinDateTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedSpinTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SpinDateTimes");
                });
#pragma warning restore 612, 618
        }
    }
}
